{"version":3,"sources":["Services/api.js","Components/Board/Card.js","Components/Board/List.js","Components/Board/Board.js","Components/Header.js","Components/Edit.js","Components/Menu.js","Services/localStorage.js","Components/App.js","serviceWorker.js","index.js"],"names":["fetch","then","response","json","Card","props","handleMoveCardUp","handleAction","action","cardId","card","id","listId","handleMoveCardDown","className","to","draggable","onDragStart","ev","handleDragStart","target","console","log","onDragEnter","dragging","handleDragEnter","title","tags","map","tag","key","onClick","type","List","handleTitle","value","currentTarget","list","handleDeleteList","handleMoveListLeft","handleMoveListRight","handleNewCard","placeholder","onChange","cards","Board","handleNewList","Header","handleInput","toggleMenu","filterText","Edit","handleIDescription","handleDeleteCard","renderTask","label","checked","htmlFor","tabIndex","data-dismiss","description","style","width","Menu","isMenuOpen","aria-hidden","localStorageData","localStorage","getItem","JSON","parse","data","setItem","stringify","App","useState","setData","setIsMenuOpen","setFilterText","dragItem","useRef","dragNode","setDragging","useEffect","LocalStorage","lsData","api","handleDragEnd","current","removeEventListener","evAction","board","push","getNewId","listIndex","getListIndex","splice","cardIndex","findIndex","currentList","currentCard","Date","now","item","newList","filter","toUpperCase","includes","addEventListener","undefined","currentItem","oldData","newData","path","render","clickedId","match","params","index","length","cardFound","find","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.da719614.chunk.js","sourcesContent":["const getDataFromApi = () => {\r\n  return fetch('./api/board.json').then((response) => response.json());\r\n};\r\n\r\nexport default {\r\n  getDataFromApi,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Card = (props) => {\r\n  // console.log(props, 'card');\r\n  // console.log(props.card.tags, 'card');\r\n\r\n  // const tagElement = props.card.tags.map((tag, index) => {\r\n  //   return (\r\n  //     <span key={index} className=\"badge badge-secondary bg-success\">\r\n  //       {tag}\r\n  //     </span>\r\n  //   );\r\n  // });\r\n\r\n  const handleDragStart = (ev) => {\r\n    props.handleDragStart({\r\n      cardId: props.card.id,\r\n      listId: props.listId,\r\n      target: ev.target,\r\n    });\r\n    console.log('drag starting...');\r\n  };\r\n\r\n  const handleDragEnter = (ev) => {\r\n    props.handleDragEnter({\r\n      cardId: props.card.id,\r\n      listId: props.listId,\r\n      target: ev.target,\r\n    });\r\n  };\r\n\r\n  const handleMoveCardUp = () => {\r\n    props.handleAction({\r\n      action: 'move-card-up',\r\n      cardId: props.card.id,\r\n      listId: props.listId,\r\n    });\r\n  };\r\n  const handleMoveCardDown = () => {\r\n    props.handleAction({\r\n      action: 'move-card-down',\r\n      cardId: props.card.id,\r\n      listId: props.listId,\r\n    });\r\n  };\r\n\r\n  const renderTags = () => {\r\n    return props.card.tags.map((tag) => {\r\n      return (\r\n        <span key={tag} className=\"badge badge-secondary bg-success mr-1\">\r\n          {tag}\r\n        </span>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderTitle = () => {\r\n    return (\r\n      <div>\r\n        <h3 className=\"h6\">{props.card.title}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderInfo = () => {\r\n    return (\r\n      <div className=\"text-black-50\">\r\n        <small className=\"pr-2 fas fa-align-left\"></small>\r\n        <small className=\"far fa-check-square\"></small>\r\n        <small title=\"Subtareas completadas: 3 de 5\"> 3/5</small>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderUpButton = () => {\r\n    return (\r\n      <button onClick={handleMoveCardUp} type=\"button\" className=\"btn btn-light text-muted border shadow-sm app-card-up-button\" title=\"Mover esta tarjeta hacia abajo\">\r\n        <span className=\"fas fa-arrow-up\"></span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const renderDownButton = () => {\r\n    return (\r\n      <button onClick={handleMoveCardDown} type=\"button\" className=\"btn btn-light text-muted border shadow-sm app-card-down-button\" title=\"Mover esta tarjeta hacia arriba\">\r\n        <span className=\"fas fa-arrow-down\"></span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Link className=\"edit\" to={`/edit/${props.card.id}`}>\r\n      <div draggable onDragStart={handleDragStart} onDragEnter={props.dragging ? handleDragEnter : null} className=\" js-card app-card m-1 mb-2 p-2 bg-white rounded-sm app-cursor-pointer shadow-sm\" title=\"Abrir la tarjeta\">\r\n        {renderTags()}\r\n        {renderTitle()}\r\n        {renderInfo()}\r\n        <div className=\"app-card-btns btn-group-vertical btn-group-sm\">\r\n          {renderUpButton()}\r\n          {renderDownButton()}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst List = (props) => {\r\n  const handleTitle = (ev) => {\r\n    props.handleAction({\r\n      action: 'modify-list-title',\r\n      value: ev.currentTarget.value,\r\n      listId: props.list.id,\r\n    });\r\n  };\r\n\r\n  // console.log(props.list, 'list');\r\n\r\n  const handleDeleteList = () => {\r\n    props.handleAction({\r\n      action: 'delete-list',\r\n      listId: props.list.id,\r\n    });\r\n  };\r\n  const handleMoveListLeft = () => {\r\n    props.handleAction({\r\n      action: 'move-list-left',\r\n      listId: props.list.id,\r\n    });\r\n  };\r\n  const handleMoveListRight = () => {\r\n    props.handleAction({\r\n      action: 'move-list-right',\r\n      listId: props.list.id,\r\n    });\r\n  };\r\n\r\n  const handleNewCard = () => {\r\n    console.log(props.list.id);\r\n\r\n    props.handleAction({\r\n      action: 'add-new-card',\r\n      listId: props.list.id,\r\n    });\r\n  };\r\n\r\n  const renderCards = () => {\r\n    return props.list.cards.map((card) => {\r\n      return <Card key={card.id} card={card} handleAction={props.handleAction} handleDragStart={props.handleDragStart} dragging={props.dragging} handleDragEnter={props.handleDragEnter} listId={props.list.id} />;\r\n    });\r\n  };\r\n\r\n  const renderInput = () => {\r\n    return <input className=\"app-list-input form-control form-control-sm\" placeholder=\"Tareas importantes\" type=\"text\" value={props.list.title} title=\"Editar el título de la lista\" onChange={handleTitle} />;\r\n  };\r\n\r\n  const renderEllipsis = () => {\r\n    return <span className=\"pl-2 pr-2 text-white-50 fas fa-ellipsis-v\"></span>;\r\n  };\r\n\r\n  const renderDeleteButton = () => {\r\n    return (\r\n      <button onClick={handleDeleteList} type=\"button\" className=\"btn btn-light text-muted border shadow-sm\" title=\"Borrar esta tarjeta\">\r\n        <span className=\"fas fa-trash-alt\"></span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const renderLeftButton = () => {\r\n    return (\r\n      <button onClick={handleMoveListLeft} type=\"button\" className=\"btn btn-light text-muted border shadow-sm app-list-left-button\" title=\"Mover esta lista hacia la izquierda\">\r\n        <span className=\"fas fa-arrow-left\"></span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const renderRightButton = () => {\r\n    return (\r\n      <button onClick={handleMoveListRight} type=\"button\" className=\"btn btn-light text-muted border shadow-sm app-list-right-button\" title=\"Mover esta lista hacia la derecha\">\r\n        <span className=\"fas fa-arrow-right\"></span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const renderNewCardButton = () => {\r\n    return (\r\n      <button onClick={handleNewCard} type=\"button\" className=\"ml-1 btn btn-primary btn-sm text-white-50\" title=\"Añadir una nueva tarjeta\">\r\n        <span className=\"fas fa-plus\"></span> Añadir otra tarjeta\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-list show\">\r\n      <div className=\"p-1 rounded-sm bg-primary shadow\">\r\n        <form className=\"app-list-form align-middle p-1 position-relative\">\r\n          {renderInput()}\r\n          <div className=\"app-list-options\">\r\n            {renderEllipsis()}\r\n            <div className=\"app-list-btns btn-group btn-group-sm\">\r\n              {renderDeleteButton()}\r\n              {renderLeftButton()}\r\n              {renderRightButton()}\r\n            </div>\r\n          </div>\r\n        </form>\r\n        {renderCards()}\r\n        {renderNewCardButton()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport List from './List';\r\n\r\nconst Board = (props) => {\r\n  console.log(props);\r\n\r\n  const renderList = () => {\r\n    return props.list.map((list) => {\r\n      return <List handleDragStart={props.handleDragStart} key={list.id} list={list} handleAction={props.handleAction} dragging={props.dragging} handleDragEnter={props.handleDragEnter} />;\r\n    });\r\n  };\r\n\r\n  const handleNewList = (ev) => {\r\n    console.log('hola');\r\n    props.handleAction({\r\n      action: 'add-new-list',\r\n    });\r\n  };\r\n\r\n  const renderNewListButton = () => {\r\n    return (\r\n      <div>\r\n        <button onClick={handleNewList} type=\"button\" className=\"btn btn-light btn-outline-primary btn-sm mr-5 shadow-sm\" title=\"Añadir una nueva lista\">\r\n          <span className=\"fas fa-plus\"></span>\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <main className=\"app-board d-flex flex-nowrap\">\r\n      {renderList()}\r\n      {renderNewListButton()}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\r\n\r\nconst Header = (props) => {\r\n  const handleInput = (ev) => {\r\n    props.handleInput(ev.currentTarget.value);\r\n  };\r\n  const toggleMenu = () => {\r\n    props.toggleMenu();\r\n  };\r\n\r\n  const renderFilter = () => {\r\n    return (\r\n      <>\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text bg-white border-right-0 text-primary\">\r\n            <span className=\"fas fa-search\"></span>\r\n          </span>\r\n        </div>\r\n        <input onChange={handleInput} type=\"text\" className=\"app-header-search form-control border-left-0\" title=\"Filtrar las tareas\" value={props.filterText} />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderMenuButton = () => {\r\n    return (\r\n      <button onClick={toggleMenu} type=\"button\" className=\"js-menu-btn btn btn-primary btn-sm text-white-50\" title=\"Abrir el menú\">\r\n        <span className=\"fas fa-columns\"></span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <header className=\"app-header bg-primary mb-3 d-flex justify-content-between align-items-center shadow\">\r\n      <h1 className=\"app-header-title h3 text-white pl-3 pt-1 mr-4 font-weight-light\">Gestor de proyectos</h1>\r\n      <form className=\"app-header-form p-2 d-flex justify-content-end\">\r\n        <div className=\"app-header-input input-group input-group-sm mr-2\">{renderFilter()}</div>\r\n        {renderMenuButton()}\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Edit = (props) => {\r\n  // const tagElement = props.task.tags.map((tag, index) => {\r\n  //   return (\r\n  //     <span key={index} className=\"badge badge-secondary bg-success\">\r\n  //       {tag}\r\n  //     </span>\r\n  //   );\r\n  // });\r\n\r\n  const handleInput = (ev) => {\r\n    props.handleAction({\r\n      action: 'modify-card-title',\r\n      value: ev.currentTarget.value,\r\n      cardId: props.card.id,\r\n      listId: props.listId,\r\n    });\r\n  };\r\n  const handleIDescription = (ev) => {\r\n    props.handleAction({\r\n      action: 'modify-card-description',\r\n      value: ev.currentTarget.value,\r\n      cardId: props.card.id,\r\n      listId: props.listId,\r\n    });\r\n  };\r\n\r\n  const handleDeleteCard = () => {\r\n    props.handleAction({\r\n      action: 'delete-card',\r\n      cardId: props.card.id,\r\n      listId: props.listId,\r\n    });\r\n  };\r\n\r\n  const renderHeader = () => {\r\n    return (\r\n      <h5 className=\"modal-title d-flex w-100\">\r\n        <span className=\"fas fa-columns mt-3 mr-2 text-muted\"></span>\r\n        <div className=\"w-100\">\r\n          <input className=\"app-edit-title form-control mb-0 border-0\" placeholder=\"Filtrar tarjetas\" type=\"text\" value={props.card.title} onChange={handleInput} />\r\n          <small className=\"app-edit-subtitle d-block mt-0 text-muted\">\r\n            en la lista <strong>Por hacer</strong>\r\n          </small>\r\n        </div>\r\n      </h5>\r\n    );\r\n  };\r\n\r\n  const renderCloseButton = () => {\r\n    return (\r\n      <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n        <span>&times;</span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const renderDescription = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-1 pl-0 pr-0\">\r\n          <span className=\"fas fa-align-left text-muted\"></span>\r\n        </div>\r\n        <div className=\"col-11 pl-0 pr-0\">\r\n          <h6 className=\"h6\">Descripción</h6>\r\n          <textarea className=\"app-edit-textarea\" onChange={handleIDescription} value={props.card.description} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderTasks = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-1 pl-0 pr-0\">\r\n          <span className=\"far fa-check-square text-muted\"></span>\r\n        </div>\r\n        <div className=\"col-11 pl-0 pr-0\">\r\n          <h6 className=\"h6 mb-3\">Subtareas: completadas 3 de 5</h6>\r\n          <div className=\"app-edit-progress progress mb-3\">\r\n            <div className=\"progress-bar\" style={{ width: '60%' }}></div>\r\n          </div>\r\n          {renderTask('Unificar eventos', true)}\r\n          {renderTask('Unificar las clases de la cabecera', false)}\r\n          {renderTask('Unificar las clases de las tarjetas', false)}\r\n          {renderTask('Unificar las funciones de datos', false)}\r\n          {renderTask('Unificar las estilos', true)}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderTask = (label, checked) => {\r\n    return (\r\n      <div className=\"custom-control custom-checkbox mb-2\">\r\n        <input className=\"custom-control-input\" type=\"checkbox\" checked={checked} id=\"subtask-1\" onChange={handleInput} />\r\n        <label className=\"custom-control-label\" htmlFor=\"subtask-1\">\r\n          {label}\r\n        </label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderTags = () => {\r\n    return (\r\n      <>\r\n        <h6 className=\"h6 text-uppercase\">Etiquetas</h6>\r\n        <div className=\"mb-4\">\r\n          <span className=\"badge badge-secondary bg-success mr-1\">JS</span>\r\n          <span className=\"badge badge-secondary bg-success mr-1\">Css</span>\r\n          <span className=\"badge badge-secondary bg-success mr-1\">Html</span>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderActions = () => {\r\n    return (\r\n      <>\r\n        <h6 className=\"h6 text-uppercase\">Acciones</h6>\r\n        <button type=\"button\" className=\"btn btn-primary btn-sm mb-2 w-100 text-left\">\r\n          <span className=\"fas fa-copy mr-2\"></span> Duplicar\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-primary btn-sm mb-2 w-100 text-left\">\r\n          <span className=\"fas fa-share-alt mr-2\"></span> Mover\r\n        </button>\r\n        <Link to=\"/\">\r\n          <button onClick={handleDeleteCard} type=\"button\" className=\"btn btn-primary btn-sm mb-2 w-100 text-left\">\r\n            <span className=\"fas fa-trash-alt mr-2\"></span> Borrar\r\n          </button>\r\n        </Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-edit modal show\" tabIndex=\"-1\">\r\n      <section className=\"modal-dialog modal-dialog-centered modal-lg\">\r\n        <div className=\"modal-content bg-light shadow border-0\">\r\n          <form>\r\n            <div className=\"modal-header border-bottom-0\">\r\n              {renderHeader()}\r\n              <Link to=\"/\">{renderCloseButton()}</Link>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-9 col-8\">\r\n                  <div className=\"container-fluid mb-4\">{renderDescription()}</div>\r\n                  <div className=\"container-fluid mb-4\">{renderTasks()}</div>\r\n                </div>\r\n                <div className=\"col-xl-3 col-4\">\r\n                  {renderTags()}\r\n                  {renderActions()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","import React from 'react';\r\n\r\nconst Menu = (props) => {\r\n  const toggleMenu = () => {\r\n    props.toggleMenu();\r\n  };\r\n\r\n  return (\r\n    <section className={props.isMenuOpen ? 'app-menu show' : 'app-menu'}>\r\n      <div className=\"app-menu-inner bg-light p-2 shadow\">\r\n        <header className=\"d-flex justify-content-between align-items-start mb-4\">\r\n          <h2 className=\"h4 font-weight-light\">Menú</h2>\r\n          <button onClick={toggleMenu} type=\"button\" className=\"js-menu-btn close pl-2 pr-2 pb-1\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </header>\r\n        <main>\r\n          <h5 className=\"h5\">Tareas por etiquetas</h5>\r\n          <h6 className=\"h5\">\r\n            <span className=\"badge badge-secondary bg-success\">JS</span>\r\n          </h6>\r\n          <ul>\r\n            <li>\r\n              <small>Unificar funcionalidad</small>\r\n            </li>\r\n            <li>\r\n              <small>Pintar el DOM</small>\r\n            </li>\r\n            <li>\r\n              <small>Escuchar eventos</small>\r\n            </li>\r\n            <li>\r\n              <small>Manipular datos</small>\r\n            </li>\r\n          </ul>\r\n          <h6 className=\"h5\">\r\n            <span className=\"badge badge-secondary bg-success\">Css</span>\r\n          </h6>\r\n          <ul>\r\n            <li>\r\n              <small>Manipular datos</small>\r\n            </li>\r\n            <li>\r\n              <small>Guardar en el local storage</small>\r\n            </li>\r\n            <li>\r\n              <small>Obtener datos del API</small>\r\n            </li>\r\n          </ul>\r\n          <h6 className=\"h5\">\r\n            <span className=\"badge badge-secondary bg-success\">Html</span>\r\n          </h6>\r\n          <ul>\r\n            <li>\r\n              <small>Unificar funcionalidad</small>\r\n            </li>\r\n            <li>\r\n              <small>Pintar el DOM</small>\r\n            </li>\r\n            <li>\r\n              <small>Escuchar eventos</small>\r\n            </li>\r\n            <li>\r\n              <small>Manipular datos</small>\r\n            </li>\r\n            <li>\r\n              <small>Guardar en el local storage</small>\r\n            </li>\r\n            <li>\r\n              <small>Obtener datos del API</small>\r\n            </li>\r\n          </ul>\r\n        </main>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","const get = () => {\r\n  const localStorageData = localStorage.getItem('data');\r\n  return JSON.parse(localStorageData);\r\n};\r\n\r\nconst set = (data) => {\r\n  localStorage.setItem('data', JSON.stringify(data));\r\n};\r\n\r\nconst isValid = () => {\r\n  const localStorageData = localStorage.getItem('data');\r\n  if (localStorageData === null) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\nexport default {\r\n  get,\r\n  set,\r\n  isValid,\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport api from '../Services/api';\r\nimport Board from './Board/Board';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Edit from './Edit';\r\n// import Landing from './Landing';\r\nimport Menu from './Menu';\r\nimport LocalStorage from '../Services/localStorage';\r\nimport State from './State';\r\nimport '../assets/scss/main.scss';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    // board: {\r\n    //   list: []\r\n    // }\r\n  });\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [filterText, setFilterText] = useState('');\r\n  const dragItem = useRef();\r\n  // const listOfDragItem = useRef();\r\n  const dragNode = useRef();\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (LocalStorage.isValid()) {\r\n      const lsData = LocalStorage.get();\r\n      setData(lsData);\r\n      // console.log(lsData);\r\n    } else {\r\n      api.getDataFromApi().then(setData);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    LocalStorage.set(data);\r\n  });\r\n  const filteredTasks = () => {\r\n    console.log(data.board.list);\r\n\r\n    // debugger;\r\n\r\n    return data.board.list.map((item) => {\r\n      const newList = { ...item };\r\n\r\n      newList.cards = newList.cards.filter((card) => {\r\n        return card.title.toUpperCase().includes(filterText.toUpperCase());\r\n      });\r\n\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const getListData = () => {\r\n    // console.log(data.board);\r\n\r\n    return data.board ? filteredTasks() : [];\r\n  };\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n    console.log(isMenuOpen);\r\n  };\r\n\r\n  const handleDragStart = (evAction) => {\r\n    const listIndex = getListIndex(evAction.listId);\r\n    const cardIndex = data.board.list[listIndex].cards.findIndex((card) => card.id === evAction.cardId);\r\n    dragItem.current = cardIndex;\r\n    // listOfDragItem.current = listIndex;\r\n    dragNode.current = evAction.target;\r\n    dragNode.current.addEventListener('dragend', handleDragEnd);\r\n    setDragging(true);\r\n    console.log(listIndex + 'lista' + cardIndex + 'card');\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    console.log('ending drag..');\r\n    setDragging(false);\r\n    dragNode.current.removeEventListener('dragend', handleDragEnd);\r\n    dragItem.current = null;\r\n    dragNode.current = null;\r\n    // listOfDragItem.current = null;\r\n  };\r\n\r\n  const handleDragEnter = (evAction) => {\r\n    const listIndex = getListIndex(evAction.listId);\r\n    const cardIndex = data.board.list[listIndex].cards.findIndex((card) => card !== undefined && card.id === evAction.cardId);\r\n    console.log('entering drag', listIndex, cardIndex);\r\n    const currentItem = dragItem.current;\r\n    // const currentList = listOfDragItem.current;\r\n    if (evAction.target !== dragNode.current) {\r\n      setData((oldData) => {\r\n        let newData = JSON.parse(JSON.stringify(oldData));\r\n        console.log(newData.board.list[listIndex].cards[cardIndex]);\r\n        // console.log(currentList);\r\n        console.log(currentItem);\r\n        newData.board.list[listIndex].cards.splice(cardIndex, 0, newData.board.list[listIndex].cards.splice(currentItem, 1)[0]);\r\n        dragItem.current = cardIndex;\r\n        return newData;\r\n      });\r\n      console.log('TARGET IS NOT THE SAME');\r\n    }\r\n  };\r\n\r\n  // const getStylesDragging = (evAction) => {\r\n  //   const listIndex = getListIndex(evAction.listId);\r\n  //   const cardIndex = data.board.list[listIndex].cards.findIndex((card) => card.id === evAction.cardId);\r\n  //   dragItem.current = cardIndex;\r\n  //   const currentItem = dragItem.current;\r\n  //   if (currentItem === cardIndex) {\r\n  //     return 'current js-card app-card m-1 mb-2 p-2 bg-white rounded-sm app-cursor-pointer shadow-sm';\r\n  //   }\r\n  // };\r\n\r\n  const handleAction = (evAction) => {\r\n    if (evAction.action === 'add-new-list') {\r\n      data.board.list.push({\r\n        id: 'list-' + getNewId(),\r\n        title: '',\r\n        cards: [],\r\n      });\r\n      console.log(data.board.list);\r\n    } else if (evAction.action === 'add-new-card') {\r\n      const listIndex = getListIndex(evAction.listId);\r\n      // CENTRALIZO ESTE CÓDIGO REPETIDO EN UNA FUNCIÓN\r\n      // const listIndex = data.board.list.findIndex((list) => list.id === evAction.listId);\r\n      // // console.log(listIndex);\r\n      data.board.list[listIndex].cards.push({\r\n        id: 'card-' + getNewId(),\r\n        title: 'Nueva tarea',\r\n        description: '',\r\n        tags: [],\r\n      });\r\n    } else if (evAction.action === 'delete-list') {\r\n      const listIndex = getListIndex(evAction.listId);\r\n      data.board.list.splice(listIndex, 1);\r\n    } else if (evAction.action === 'modify-list-title') {\r\n      const listIndex = getListIndex(evAction.listId);\r\n      data.board.list[listIndex].title = evAction.value;\r\n    } else if (evAction.action === 'delete-card') {\r\n      debugger;\r\n      const listIndex = getListIndex(evAction.listId);\r\n      const cardIndex = data.board.list[listIndex].cards.findIndex((card) => card.id === evAction.cardId);\r\n      data.board.list[listIndex].cards.splice(cardIndex, 1);\r\n    } else if (evAction.action === 'move-list-left') {\r\n      const listIndex = getListIndex(evAction.listId);\r\n      const currentList = data.board.list.splice(listIndex, 1);\r\n      data.board.list.splice(listIndex - 1, 0, currentList[0]);\r\n    } else if (evAction.action === 'move-list-right') {\r\n      const listIndex = getListIndex(evAction.listId);\r\n      const currentList = data.board.list.splice(listIndex, 1);\r\n      data.board.list.splice(listIndex + 1, 0, currentList[0]);\r\n    } else if (evAction.action === 'move-card-up') {\r\n      const listIndex = getListIndex(evAction.listId);\r\n      const cardIndex = data.board.list[listIndex].cards.findIndex((card) => card.id === evAction.cardId);\r\n      const currentCard = data.board.list[listIndex].cards.splice(cardIndex, 1);\r\n      data.board.list[listIndex].cards.splice(cardIndex - 1, 0, currentCard[0]);\r\n    } else if (evAction.action === 'move-card-down') {\r\n      debugger;\r\n      const listIndex = getListIndex(evAction.listId);\r\n      const cardIndex = data.board.list[listIndex].cards.findIndex((card) => card.id === evAction.cardId);\r\n      const currentCard = data.board.list[listIndex].cards.splice(cardIndex, 1);\r\n      data.board.list[listIndex].cards.splice(cardIndex + 1, 0, currentCard[0]);\r\n    } else if (evAction.action === 'modify-card-title') {\r\n      const listIndex = getListIndex(evAction.listId);\r\n      const cardIndex = data.board.list[listIndex].cards.findIndex((card) => card.id === evAction.cardId);\r\n      data.board.list[listIndex].cards[cardIndex].title = evAction.value;\r\n    } else if (evAction.action === 'modify-card-description') {\r\n      const listIndex = getListIndex(evAction.listId);\r\n      const cardIndex = data.board.list[listIndex].cards.findIndex((card) => card.id === evAction.cardId);\r\n      data.board.list[listIndex].cards[cardIndex].description = evAction.value;\r\n      console.log(data.board.list[listIndex].cards[cardIndex].description);\r\n    }\r\n    setData({ ...data });\r\n  };\r\n\r\n  const getNewId = () => {\r\n    return Date.now();\r\n  };\r\n\r\n  const getListIndex = (id) => {\r\n    return data.board.list.findIndex((list) => list.id === id);\r\n  };\r\n\r\n  const handleInput = (value) => {\r\n    setFilterText(value);\r\n  };\r\n\r\n  const toggleEdit = (props) => {\r\n    const clickedId = props.match.params.id;\r\n    for (let index = 0; index < data.board.list.length; index += 1) {\r\n      console.log(data.board);\r\n\r\n      const list = data.board.list[index];\r\n      console.log(list);\r\n\r\n      const cardFound = list.cards.find((card) => card.id === clickedId);\r\n      console.log(cardFound);\r\n\r\n      if (cardFound !== undefined) {\r\n        return <Edit card={cardFound} handleAction={handleAction} listId={list.id} />;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <Header filterText={filterText} toggleMenu={toggleMenu} handleInput={handleInput} />\r\n      <Board list={getListData()} handleAction={handleAction} handleDragStart={handleDragStart} dragging={dragging} handleDragEnter={handleDragEnter} />\r\n      <Menu isMenuOpen={isMenuOpen} toggleMenu={toggleMenu} />\r\n      <Switch>\r\n        <Route path=\"/edit/:id\" render={toggleEdit} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}